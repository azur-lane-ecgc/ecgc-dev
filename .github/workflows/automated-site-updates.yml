name: Automated ECGC Updates

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  update-ecgc:
    runs-on: macos-latest
    name: Run ECGC Devtools and Commit Changes
    outputs:
      has_changes: ${{ steps.commit.outputs.has_changes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Set up Node
        uses: actions/setup-node@v5
        with:
          node-version: "22.2.0"

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.3.0"

      - name: Install dependencies
        run: |
          bun ci

      - name: Restore credentials
        run: |
          echo "$GOOGLE_CREDENTIALS_BASE64" | base64 --decode > packages/credentials.json
        env:
          GOOGLE_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}

      - name: Run gsheets2img
        run: |
          rm -rf packages/frontend/public/images/equip_misc/*
          bun run gsheets2img

      - name: Run devtools
        run: bun run devtools

      - name: Commit and push changes if any
        id: commit
        run: |
          git config --global user.name "ECGC Bot"
          git config --global user.email "ecgc-bot@users.noreply.github.com"

          if [[ -n $(git status --porcelain) ]]; then
              DATE=$(date +"%m/%d/%Y")
              git add .
              git commit -m "Chore(ecgc): Automated Site Update: $DATE"
              git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
              echo "has_changes=true" >> $GITHUB_OUTPUT
          else
              echo "No changes to commit."
              echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Clean up credentials
        if: always()
        run: |
          rm -f packages/credentials.json

      - name: Upload generated images
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: equip-misc-images
          path: packages/frontend/public/images/equip_misc/
          retention-days: 1

      - name: Print artifact URL
        run: |
          echo "Artifact URL: ${{ steps.upload.outputs.artifact-url }}"

  deploy:
    name: Deploy
    needs: update-ecgc
    if: needs.update-ecgc.outputs.has_changes == 'true'
    uses: ./.github/workflows/cf-deploy.yml
    secrets:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
