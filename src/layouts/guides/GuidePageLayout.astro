---
import { ClientRouter } from "astro:transitions"

import "@styles/guide_page.css"
import "@styles/fontawesome/css/fontawesome.css"
import "@styles/fontawesome/css/brands.css"
import "@styles/fontawesome/css/solid.css"
import "@styles/poppins_font.css"

import { Navbar } from "@components/_common/Navbar"
import { pageInfo } from "@components/_common/PageInfo"
import { SidenavPage } from "@components/_common/Sidenav"
import Footer from "@components/_common/Footer.astro"

interface Props {
  title: string
  metaTitle?: string
  activePage?: string
  tocID?: string | null
  metaUrl?: string
  metaImage?: string
  metaDescription: string
}

const {
  title,
  metaTitle,
  activePage,
  tocID,
  metaUrl,
  metaImage,
  metaDescription,
} = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <!-- for google search -->
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta
      name="google-site-verification"
      content="haSqOW7yYrOiz_6U0wAqWSb7IBGh10_KZ8cNkRJXyhQ"
    />

    <meta
      name="keywords"
      content="English Community Guide Compendium, English Azur Lane, Azur, Lane, Azur Lane, ECGC, Azur Lane ECGC, Wiki, Guide, Guides, Help, Tool, Tools, Ship, Ships, Gear, Gears, Samheart564, Sam Heart, Sam"
    />

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{metaTitle || title} - ECGC</title>

    <script is:inline type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "Azur Lane ECGC",
        "url": "https://samheart564.github.io/test_ecgc_2",
        "image": "https://samheart564.github.io/test_ecgc_2/images/misc/SiteIcon.png"
      }
    </script>

    <meta name="description" content={metaDescription} />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`https://samheart564.github.io/test_ecgc_2${metaUrl ? `/${metaUrl}` : ""}`}
    />
    <meta
      property="og:image"
      content={`https://samheart564.github.io${metaImage ? `/test_ecgc_2/images/${metaImage}` : pageInfo.find((page) => page.title === title)?.image ? pageInfo.find((page) => page.title === title)?.image : "/test_ecgc_2/images/misc/no_cover.jpg"}`}
    />
    <meta property="og:description" content={metaDescription} />

    <link
      rel="icon"
      type="image/x-icon"
      href="https://samheart564.github.io/test_ecgc_2/images/misc/SiteIcon.ico"
    />

    <script is:inline>
      !(function (t, e) {
        var o, n, p, r
        e.__SV ||
          ((window.posthog = e),
          (e._i = []),
          (e.init = function (i, s, a) {
            function g(t, e) {
              var o = e.split(".")
              2 == o.length && ((t = t[o[0]]), (e = o[1])),
                (t[e] = function () {
                  t.push([e].concat(Array.prototype.slice.call(arguments, 0)))
                })
            }
            ;((p = t.createElement("script")).type = "text/javascript"),
              (p.crossOrigin = "anonymous"),
              (p.async = !0),
              (p.src =
                s.api_host.replace(".i.posthog.com", "-assets.i.posthog.com") +
                "/static/array.js"),
              (r = t.getElementsByTagName("script")[0]).parentNode.insertBefore(
                p,
                r,
              )
            var u = e
            for (
              void 0 !== a ? (u = e[a] = []) : (a = "posthog"),
                u.people = u.people || [],
                u.toString = function (t) {
                  var e = "posthog"
                  return (
                    "posthog" !== a && (e += "." + a), t || (e += " (stub)"), e
                  )
                },
                u.people.toString = function () {
                  return u.toString(1) + ".people (stub)"
                },
                o =
                  "init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug getPageViewId captureTraceFeedback captureTraceMetric".split(
                    " ",
                  ),
                n = 0;
              n < o.length;
              n++
            )
              g(u, o[n])
            e._i.push([i, s, a])
          }),
          (e.__SV = 1))
      })(document, window.posthog || [])
      posthog.init("phc_l6QBFtrpilmwF0FpH1A5eFkDTHx5V3hRrsumQyhyy5O", {
        api_host: "https://us.i.posthog.com",
        person_profiles: "always",
      })
    </script>
  </head><span data-astro-transition-persist="someId">
    <noscript>Your browser does not support JavaScript!</noscript>
  </span>

  <ClientRouter />

  <body>
    <Navbar activePage={activePage} client:load />
    {!!tocID && <SidenavPage page={tocID} client:load />}
    <div
      id="main"
      class="guide-content-body custom-sidenav-shift mx-auto max-w-[100%] overflow-y-hidden px-3 md:max-w-[75%]"
    >
      <slot />
    </div>
  </body>
  <Footer />

  <style is:global>
    @media screen and (min-width: 1016px) and (max-width: 2016px) {
      .custom-sidenav-shift {
        margin-left: 250px;
        transition: 0.5s;
      }

      .custom-sidenav-shift.custom-sidenav-collapse {
        margin-left: 12.5vw;
      }
    }
  </style>

  <script>
    import { checkAndUpdateDatabase } from "@db/populateDb"
    checkAndUpdateDatabase().catch(() => {
      console.log("error dm developer asap")
    })
  </script>


</html>
