---
import WikiLink from "@components/_common/WikiLink.astro"
import { HR } from "@components/_common/HR"
import { ItemContainer } from "@components/_common/ItemCell"
import { ShipModal } from "@components/_common/ShipModal"

import type { ShipData } from "@data/types/ships"
import shipData from "@data/data/ships.json"
const ships = shipData as Record<number, ShipData>
---

<h2 id="introduction">Introduction</h2>
<HR />
<p>
  This list compiles all my ship evaluations (Samvaluations), ever since I
  started doing them.
</p>
<br />

<h2 id="Notes">Notes</h2>
<HR />
<ul>
  <li>
    <p>
      Mini-event ships (ex.
      <WikiLink page="Marseillaise" title="Marseillaise">Marseillaise</WikiLink
      >) or ships unaffiliated with an Event (ex.
      <WikiLink page="Houston II" title="Houston II">Houston II</WikiLink>) are
      put with the Major event closest to when their Mini-event was run for the
      first time.
    </p>
  </li>
  <li>
    <p>
      For a full list of Unique Augment Modules, see the <WikiLink
        page="Augmentation"
        title="Augmentation">Augmentation</WikiLink
      > wiki page.
    </p>
  </li>
  <li>
    <p>
      Ships with a Retrofit are put with the Event their Retrofit came out in,
      NOT with their original event.
    </p>
  </li>
  <li>
    <p>
      Evaluations for ships that were added to War Archives before
      <WikiLink page="Ashen Simulacrum" title="Ashen Simulacrum"
        >Ashen Simulacrum</WikiLink
      >
      will get added at my earliest convinence
      <span class="line-through">(which means probably never)</span>.
    </p>
  </li>
  <li>
    <h6>
      MOST DESCRIPTIONS HAVEN'T BEEN UPDATED SINCE THAT SHIP'S EVENT. IF THERE
      ARE ANY MISTAKES/CONCERNS/ETC. CONTACT ME ON DISCORD SO I CAN ADDRESS THEM
      ASAP.
    </h6>
  </li>
</ul>
<br />

<h2 id="Evaluations">Evaluations</h2>
<HR />

<ItemContainer>
  {
    Object.keys(ships).map((key) => {
      const ship = ships[parseInt(key, 10)]
      if (!ship) return false
      return (
        <ShipModal
          client:visible
          id={ship.id}
          trigger={{
            iconNote: null,
            descriptionNote: null,
            largeDescNote: false,
            hasBorder: true,
          }}
        />
      )
    })
  }
</ItemContainer>
<br />
